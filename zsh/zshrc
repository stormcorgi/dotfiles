#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# history
HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=1000000

# share .zshhistory
setopt inc_append_history
setopt share_history


# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
autoload -Uz promptinit
promptinit
prompt clint

cd ~

# offline dictionary
function dict() {
    grep $1 ~/.dict/gene-utf8.txt -A 1 -wi --color
}

# history search (Ctrl-R)peco settings
function peco-history-selection() {
    BUFFER=`history -n 1 | tac | awk '!a[$0]++' | peco`
    CURSOR=$#BUFFER
    zle reset-prompt
}
zle -N peco-history-selection
bindkey '^R' peco-history-selection

# cdr(better cd)
if [[ -n $(echo ${^fpath}/chpwd_recent_dirs(N)) && -n $(echo ${^fpath}/cdr(N)) ]]; then
    autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
    add-zsh-hook chpwd chpwd_recent_dirs
    zstyle ':completion:*' recent-dirs-insert both
    zstyle ':chpwd:*' recent-dirs-default true
    zstyle ':chpwd:*' recent-dirs-max 1000
    zstyle ':chpwd:*' recent-dirs-file "$HOME/.cache/chpwd-recent-dirs"
fi

# # cdr with peco(Ctrl-E)
# function peco-cdr () {
#     local selected_dir="$(cdr -l | sed 's/^[0-9]\+ \+//' | peco --prompt="cdr >" --query "$LBUFFER")"
#     if [ -n "$selected_dir" ]; then
#         BUFFER="cd ${selected_dir}"
#         zle accept-line
#     fi
# }
# zle -N peco-cdr
# bindkey '^E' peco-cdr

# my man
function myman() {
    echo "my commands"
    echo " - dict : offline English -> Japanese dictionary"
    echo " - myman : show this message"
    echo "shortcut keys"
    echo "<Ctrl-R> : peco zsh_history search"
}
myman

## python section
PATH=$PATH:~/.local/bin

# toot toot!
alias tl='toot timeline -r -1'
alias fav='toot notifications | less'
alias post='toot post'

# get-command
alias gcm="echo $PATH | tr ':' '\n' | xargs -I{} find {} -type f -executable -printf '%f\n' | sort -u"


# 以下は末尾に配置すること。
# ~/.zshrc.localが存在するときはそちらでオーバーライド
[ -f ~/.zshrc.local ] && source ~/.zshrc.local
